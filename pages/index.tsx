import fs from 'fs';
import path from 'path';
import matter from 'gray-matter';
import { InferGetStaticPropsType } from 'next';
import Head from 'next/head';
import styles from '../styles/Home.module.scss';
import Quote from '../components/Quote';
import { displayRdm } from '../util/utils';
import { useEffect, useState } from 'react';
import ThemeToggle from '../components/ThemeToggle';
import useGlobalShortcut from '../hooks/useGlobalShortcut';

export default function Home({
  books,
  rdmQuote,
  rdmHighlight,
}: InferGetStaticPropsType<typeof getStaticProps>) {
  const [rQuote, setRQuote] = useState(rdmQuote);
  const [rHighlight, setRHighlight] = useState(rdmHighlight);

  useEffect(() => {
    // get init rdm
    updateRdm();
  }, []);

  // press Space to update Quote
  useGlobalShortcut({
    keyup(ev: any) {
      if (ev.key === ' ') {
        updateRdm();
      }
    },
  });

  // update state: rdmHighlight
  const updateRdm = () => {
    setRQuote(displayRdm(books).rdmQuote);
    setRHighlight(displayRdm(books).rdmHighlight);
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Quote</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <Quote rdmHighlight={rHighlight} rdmQuote={rQuote} />

        <button
          className="absolute right-10 bottom-10 text-6xl transform transition-all duration-300 hover:scale-95 active:rotate-270"
          onClick={updateRdm}
        >
          ðŸŽ²
        </button>
      </main>
    </div>
  );
}

export async function getStaticProps() {
  // get data
  const files = fs.readdirSync(path.join('data/books'));

  // get file names without extension
  const books = files.map((fileName) => {
    // create slug
    const slug = fileName.replace('.md', '');

    // get frontmatter
    const markdownWithMeta = fs.readFileSync(
      path.join('data/books', fileName),
      'utf-8'
    );

    // get md
    const { data: frontmatter, content } = matter(markdownWithMeta);

    return {
      slug,
      frontmatter,
      content,
    };
  });

  return {
    props: {
      books,
      rdmQuote: displayRdm(books).rdmQuote,
      rdmHighlight: displayRdm(books).rdmHighlight,
    },
  };
}
